[{"/Users/ao/Desktop/code/forage_calendar/src/index.js":"1","/Users/ao/Desktop/code/forage_calendar/src/App.js":"2","/Users/ao/Desktop/code/forage_calendar/src/reportWebVitals.js":"3","/Users/ao/Desktop/code/forage_calendar/src/components/Logbook.jsx":"4","/Users/ao/Desktop/code/forage_calendar/src/components/Calendar.jsx":"5","/Users/ao/Desktop/code/forage_calendar/src/components/Fieldguide.jsx":"6","/Users/ao/Desktop/code/forage_calendar/src/components/Maps.jsx":"7","/Users/ao/Desktop/code/forage_calendar/src/components/Header.jsx":"8","/Users/ao/Desktop/code/forage_calendar/src/components/Reources.jsx":"9","/Users/ao/Desktop/code/forage_calendar/src/components/Lost.jsx":"10","/Users/ao/Desktop/code/forage_calendar/src/components/Contact.jsx":"11","/Users/ao/Desktop/code/forage_calendar/src/components/Footer.jsx":"12","/Users/ao/Desktop/code/forage_calendar/src/shared/mushroomIndex.js":"13","/Users/ao/Desktop/code/forage_calendar/src/components/FieldguideEntry.jsx":"14","/Users/ao/Desktop/code/forage_calendar/src/components/Safepractices.jsx":"15","/Users/ao/Desktop/code/forage_calendar/src/shared/safePractices_content.js":"16","/Users/ao/Desktop/code/forage_calendar/src/components/Backend.jsx":"17","/Users/ao/Desktop/code/forage_calendar/src/components/PublicLands.jsx":"18","/Users/ao/Desktop/code/forage_calendar/src/shared/public_lands.js":"19","/Users/ao/Desktop/code/forage_calendar/src/components/ForageLogger.jsx":"20","/Users/ao/Desktop/code/forage_calendar/src/shared/weatherAPI.js":"21","/Users/ao/Desktop/code/forage_calendar/src/shared/apiKey.js":"22"},{"size":500,"mtime":1609906552000,"results":"23","hashOfConfig":"24"},{"size":2345,"mtime":1610650073000,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1609906552000,"results":"26","hashOfConfig":"24"},{"size":522,"mtime":1610670059000,"results":"27","hashOfConfig":"24"},{"size":141,"mtime":1609908550000,"results":"28","hashOfConfig":"24"},{"size":915,"mtime":1610379238000,"results":"29","hashOfConfig":"24"},{"size":8277,"mtime":1610644220000,"results":"30","hashOfConfig":"24"},{"size":563,"mtime":1610373933000,"results":"31","hashOfConfig":"24"},{"size":143,"mtime":1609907559000,"results":"32","hashOfConfig":"24"},{"size":448,"mtime":1609962854000,"results":"33","hashOfConfig":"24"},{"size":2105,"mtime":1610130971000,"results":"34","hashOfConfig":"24"},{"size":933,"mtime":1610373927000,"results":"35","hashOfConfig":"24"},{"size":3349,"mtime":1610673703000,"results":"36","hashOfConfig":"24"},{"size":1962,"mtime":1610379321000,"results":"37","hashOfConfig":"24"},{"size":511,"mtime":1610114734000,"results":"38","hashOfConfig":"24"},{"size":1779,"mtime":1610114688000,"results":"39","hashOfConfig":"24"},{"size":135,"mtime":1610130392000,"results":"40","hashOfConfig":"24"},{"size":688,"mtime":1610585132000,"results":"41","hashOfConfig":"24"},{"size":3866,"mtime":1610571568000,"results":"42","hashOfConfig":"24"},{"size":5210,"mtime":1610678069000,"results":"43","hashOfConfig":"24"},{"size":3199,"mtime":1610669319000,"results":"44","hashOfConfig":"24"},{"size":225,"mtime":1610650289000,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"b9gkab",{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ao/Desktop/code/forage_calendar/src/index.js",[],["95","96"],"/Users/ao/Desktop/code/forage_calendar/src/App.js",["97","98"],"/Users/ao/Desktop/code/forage_calendar/src/reportWebVitals.js",[],"/Users/ao/Desktop/code/forage_calendar/src/components/Logbook.jsx",["99","100"],"/Users/ao/Desktop/code/forage_calendar/src/components/Calendar.jsx",[],"/Users/ao/Desktop/code/forage_calendar/src/components/Fieldguide.jsx",[],"/Users/ao/Desktop/code/forage_calendar/src/components/Maps.jsx",["101","102","103"],"import { marker } from \"leaflet\";\nimport React, { useState, useCallback, useEffect, useMemo } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\n\n// This component renders the main map element. It takes an initial single location as a prop to be rendered as a map view. Can be partnered with render locations to display markes.\n// expects an initial location:[[longitude, latitude], zoom], and a css ID,  which most importantly sets the size of the map;\n\nexport const RenderPublicLands = () => {};\n\nexport const RenderMap = ({ containerID, initialLocation, children }) => {\n  // console.log(children);\n  return (\n    <MapContainer\n      id={containerID}\n      center={initialLocation.location}\n      zoom={initialLocation.zoom}\n      scrollWheelZoom={true}\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      {children} {/*this is where the markers are called*/}\n    </MapContainer>\n  );\n};\n\n// For the main public Lands page\n//Renders maker, a popup\n// expects an array of objects with attributes locations = [longNUM,latNum] and a name = nameString\n\n//future addition a circle or svg map overlay\n\nexport const RenderLocations = ({ locations, children }) => {\n  // const [markerz, updateMarker] = useState(null);\n  const markers = locations.map((location) => {\n    const childrenWithProps = React.cloneElement(children, {\n      location: location,\n    });\n\n    return (\n      <Marker position={location.location} key={location.key}>\n        <Popup>\n          <h3>{location.name}</h3>\n          {childrenWithProps}\n        </Popup>\n      </Marker>\n    );\n  });\n\n  return markers;\n};\n\n// provides a maps link street address to assist in getting there?\nexport const RenderPublicLandsinfo = ({ location }) => {\n  const addressQuery = location.address.replace(/\\s/g, \"+\").replace(/\\,/g, \"\");\n  return (\n    <>\n      <a\n        href={`https://maps.google.com/?&daddr=${addressQuery}`}\n        target=\"blank\"\n      >\n        <p>Current Weather</p>\n        <p>Upcoming Weather</p>\n        <p>Previous weather</p>\n        <p>sky cover</p>\n        {location.address}\n      </a>\n    </>\n  );\n};\n\n//For the logbook section\n// renders popup text for forage finds for user logbook section\n\nexport const RenderForageFindsInfo = (locations) => {\n  const finds = (\n    <>\n      <p>\"pip\"</p>\n      {/* should display thumbnail photo */}\n      {/* date with seasonal indicator... in logbook saving some weather data would be good as well*/}\n      {/* naem of specimen */}\n      {/* NOtes*/}\n      {/* /link to fieldguid entry */}\n    </>\n  );\n\n  return finds;\n};\n\n//subcomponents\n\n// rendeers list of locations marked on the map in a seperate div\nexport const RenderListofLocations = ({ locations }) => {\n  const shiftFocus = (ev) => {\n    const el = ev.target;\n    console.log(el);\n  };\n  const locationList = locations.map((location) => {\n    if (location.weather) {\n      //finds\n      return <></>;\n    } else {\n      // public lands\n      return (\n        //turn this into some sorta card/accordian\n        <a key={location.key} onClick={shiftFocus}>\n          <div>\n            <h3>{location.name}</h3>\n            <p>{location.desc}</p>\n          </div>\n        </a>\n      );\n    }\n  });\n\n  return <>{locationList}</>;\n};\n\n///////////////////\n//external state example from docs https://react-leaflet.js.org/docs/\nconst center = [51.505, -0.09];\nconst zoom = 13;\n\nexport function DisplayPosition({ map }) {\n  const [position, setPosition] = useState(map.getCenter());\n\n  const onClick = useCallback(() => {\n    map.setView(center, zoom);\n  }, [map]);\n\n  const onMove = useCallback(() => {\n    setPosition(map.getCenter());\n  }, [map]);\n\n  useEffect(() => {\n    map.on(\"move\", onMove);\n    return () => {\n      map.off(\"move\", onMove);\n    };\n  }, [map, onMove]);\n\n  return (\n    <p>\n      latitude: {position.lat.toFixed(4)}, longitude: {position.lng.toFixed(4)}{\" \"}\n      <button onClick={onClick}>reset</button>\n    </p>\n  );\n}\n\nexport function ExternalStateExample() {\n  const [map, setMap] = useState(null);\n\n  const displayMap = useMemo(\n    () => (\n      <MapContainer\n        center={center}\n        zoom={zoom}\n        scrollWheelZoom={false}\n        whenCreated={setMap}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n      </MapContainer>\n    ),\n    []\n  );\n\n  return (\n    <div>\n      {map ? <DisplayPosition map={map} /> : null}\n      {displayMap}\n    </div>\n  );\n}\n\n// the old code from v1\n\n// // epects an array of [name, [longitude, latitude], zoom]\n// export const renderLocations = (publicLands) => {};\n\n// // map & filter the data\n// const publicLandsList = [\n//   [\"Snake Den\", [41.84680296, -71.533], 14],\n//   [\"South Kingston Land Trust\", [41.407361, -71.584253], 15],\n//   [\"George Washington State Forest\", [41.944297, -71.770591], 13],\n//   [\"Lincoln Woods\", [41.897485, -71.431989], 15],\n//   [\"Big River Management Area\", [41.626606, -71.591892], 13],\n// ];\n\n// let landLabels = [];\n\n// for (let i = 0; i < publicLandsList.length; i++) {\n//   // camelCase name\n//   let parkID =\n//     publicLandsList[i][0].charAt(0).toLowerCase() +\n//     publicLandsList[i][0].slice(1).replace(/ /g, \"\");\n//   landLabels.push(parkID);\n\n//   // make markers\n//   for (let i = 0; i < landLabels.length; i++) {\n//     landLabels[i] = L.circle(publicLandsList[i][1], {\n//       color: \"teal\", // add to color ways\n//       fillColor: \"cyan\",\n//       fillOpacity: 0.05,\n//       radius: 1500,\n//     });\n//     landLabels[i].bindPopup(publicLandsList[i][0]);\n//   }\n// }\n\n// // group for markers\n// let markers = L.layerGroup(landLabels);\n// markers.addTo(mymap);\n\n// function rootabega() {\n//   mymap.removeLayer(markers);\n// }\n\n// // TOGGLE MARKERS\n// // change to arrow function?\n// let zoom;\n// mymap.on(\"zoom\", function () {\n//   zoom = mymap.getZoom();\n\n//   console.log(zoom);\n//   if (zoom > 12) {\n//     mymap.removeLayer(markers);\n//   } else if (zoom <= 12) {\n//     markers.addTo(mymap);\n//   }\n// });\n\n// // assign focus of map\n// function changeMap([lat, lon], z) {\n//   mymap.setView([lat, lon], z);\n// }\n\n// //console helper function to find map location and zoom level of new locations.\n// function getLatLong(on) {\n//   if (on) {\n//     document.querySelector(\"#mapid\").addEventListener(\"click\", function () {\n//       console.log(mymap.getCenter(), mymap.getZoom());\n//     });\n//   }\n// }\n\n// // locate yourself\n// document.querySelector(\"#locate\").addEventListener(\"click\", function () {\n//   mymap.locate({ setView: true, maxZoom: 16 });\n// });\n// document.querySelector(\"#statewide\").addEventListener(\"click\", function () {\n//   mymap.setView([41.7129, -71.4921], 9);\n// });\n\n// function onLocationFound(e) {\n//   var radius = e.accuracy;\n\n//   L.marker(e.latlng)\n//     .addTo(mymap)\n//     .bindPopup(\"You are within \" + radius + \" meters from this point\")\n//     .openPopup();\n\n//   L.circle(e.latlng, radius).addTo(mymap);\n// }\n// function onLocationError(e) {\n//   alert(e.message);\n// }\n\n// mymap.on(\"locationfound\", onLocationFound);\n// mymap.on(\"locationerror\", onLocationError);\n\n// // relookat this to understand the function wrapper at the end.\n\n// // re-look at onclick syntax....\n// // element.onclick=function(parems)\n\n// // map & filter creating this\n\n// document.querySelector(\"#snakeDen\").addEventListener(\"click\", function () {\n//   changeMap([41.84680296, -71.533], 14);\n// });\n// document\n//   .querySelector(\"#SouthKingstonLandTrust\")\n//   .addEventListener(\"click\", function () {\n//     changeMap([41.407361, -71.584253], 15);\n//   });\n// document\n//   .querySelector(\"#georgeWashingtonStateForest\")\n//   .addEventListener(\"click\", function () {\n//     changeMap([41.944297, -71.770591], 13);\n//   });\n// document.querySelector(\"#lincolnWoods\").addEventListener(\"click\", function () {\n//   changeMap([41.897485, -71.431989], 15);\n// });\n// document\n//   .querySelector(\"#bigRiverManagementArea\")\n//   .addEventListener(\"click\", function () {\n//     changeMap([41.626606, -71.591892], 13);\n//   });\n","/Users/ao/Desktop/code/forage_calendar/src/components/Header.jsx",[],"/Users/ao/Desktop/code/forage_calendar/src/components/Reources.jsx",[],"/Users/ao/Desktop/code/forage_calendar/src/components/Lost.jsx",[],"/Users/ao/Desktop/code/forage_calendar/src/components/Contact.jsx",[],"/Users/ao/Desktop/code/forage_calendar/src/components/Footer.jsx",[],"/Users/ao/Desktop/code/forage_calendar/src/shared/mushroomIndex.js",[],"/Users/ao/Desktop/code/forage_calendar/src/components/FieldguideEntry.jsx",["104"],"import React from \"react\";\n// import { mushrooms } from \"../shared/mushroomIndex\";\n\n// \"I got props from the link, and that populates me as?\n\nfunction PhotoDisplay({ photo, photos }) {\n  const toggleThumb = () => {\n    console.log(\"i be big now\");\n  };\n  const imgs = [...photos, photo]; //use this to map thumbnails.\n  const thumbs = imgs.map((image) => {\n    const url = image.split(\"/\");\n\n    // a differnt option, better bc no unnecessary array\n    // const lastItem = thePath.substring(thePath.lastIndexOf('/') + 1)\n    // https://flaviocopes.com/how-to-get-last-item-path-javascript/\n\n    const imgName = url[url.length - 2]; //retrieves the directory name for the specimen, which is the speciment name\n    console.log(imgName);\n    // slice the name to get evrything from the end until the slash\n    return (\n      <a onClick={toggleThumb}>\n        <img src={image} alt={imgName} />\n      </a>\n    );\n  });\n\n  //circles growing up larger\n  // name over scrim on image?\n  //links again.\n\n  return <div id=\"thumbs\">{thumbs}</div>;\n}\n\nexport default function FieldguideEntry({ specimen }) {\n  return (\n    <>\n      <p>breadcrumbs fieldguide//{specimen.binomial}</p>\n      <br />\n      <h2>\n        <i>{specimen.binomial}</i>\n      </h2>\n      <h3>{`Common Names: ${specimen.names.join(\", \")}`}</h3>\n\n      {/* <img src={specimen.photo} alt={`image of ${specimen.binomial}`} /> */}\n      <PhotoDisplay photo={specimen.photo} photos={specimen.photos} />\n      <h3>Charactersitics</h3>\n      <p>{specimen.description.characteristics}</p>\n      <p>{specimen.description.habitat}</p>\n      {/* conditional for danger flag \n              \n              */}\n      <h3>Look Alikes</h3>\n      {/* <PhotoDisplay photos={specimen.lookAlikes}/> */}\n      <h3>Edibility: {specimen.edibility}</h3>\n      <p>{specimen.cooking.notes}</p>\n      <h4>Recipes</h4>\n      <ul>{/* map the recipe links? */}</ul>\n    </>\n  );\n}\n","/Users/ao/Desktop/code/forage_calendar/src/components/Safepractices.jsx",[],"/Users/ao/Desktop/code/forage_calendar/src/shared/safePractices_content.js",[],"/Users/ao/Desktop/code/forage_calendar/src/components/Backend.jsx",[],"/Users/ao/Desktop/code/forage_calendar/src/components/PublicLands.jsx",["105"],"import React, { useState } from \"react\";\nimport { publicLands } from \"../shared/public_lands\";\nimport {} from \"react-leaflet\";\nimport {\n  RenderMap,\n  RenderLocations,\n  RenderPublicLandsinfo,\n  RenderListofLocations,\n} from \"./Maps\";\n\nexport default function PublicLands() {\n  const ri = { location: [41.7129, -71.4921], zoom: 9 }; // long, lat, zoom level\n  //\n\n  return (\n    <>\n      <div>\n        <RenderMap containerID=\"public-lands\" initialLocation={ri}>\n          <RenderLocations locations={publicLands}>\n            <RenderPublicLandsinfo />\n          </RenderLocations>\n        </RenderMap>\n        <RenderListofLocations locations={publicLands} />\n      </div>\n    </>\n  );\n}\n","/Users/ao/Desktop/code/forage_calendar/src/shared/public_lands.js",[],"/Users/ao/Desktop/code/forage_calendar/src/components/ForageLogger.jsx",["106","107","108","109","110","111","112"],"/Users/ao/Desktop/code/forage_calendar/src/shared/weatherAPI.js",["113","114","115","116","117","118","119"],"// change this\nimport { useState } from \"react\";\nimport { apiKey } from \"./apiKey.js\";\nimport React from \"react\";\n\n// how to cache weather?\n\n// make as few calls as possinle to get all the info, this should happen from the server and then get passed forward to the client\n\n// how do I differentiate between user location and the various public lands\n// long term look at weather patterns of RI regions... see if there is an overall architecture to it.\n\n// for geolocation -- more thorough version here https://www.tutorialrepublic.com/html-tutorial/html5-geolocation.php\n\n//  // Define callback function for failed attempt\n//  function errorCallback(error) {\n//     if(error.code == 1) {\n//         result.innerHTML = \"You've decided not to share your position, but it's OK. We won't ask you again.\";\n//     } else if(error.code == 2) {\n//         result.innerHTML = \"The network is down or the positioning service can't be reached.\";\n//     } else if(error.code == 3) {\n//         result.innerHTML = \"The attempt timed out before it could get the location data.\";\n//     } else {\n//         result.innerHTML = \"Geolocation failed due to unknown error.\";\n//     }\n// }\n\n//set redux state that the weather has been called for the day\n//   weatherState = true; //Flag we haz weather\n//   weather = setState({ somefrickingWeather }); //load the weather into state\n\n//POTENTIALLY jsut calls the NOAA free service.\n\n//   loop through places and fetch\n\n// const [noaaMapGrid, setMapGrid] = useState({\n//     gridID: \"\",\n//     gridX: \"\",\n//     gridY: \"\",\n//   });\n\n//  this is personcal location fetc\nexport const GetWeather = () => {\n  navigator.geolocation.getCurrentPosition(getCoords, error);\n};\n\nfunction getCoords(position) {\n  const lat = position.coords.latitude;\n  const long = position.coords.longitude;\n  // setState with the position?\n\n  fetch(`https://api.weather.gov/points/${lat},${long}`)\n    .then((response) => response.json())\n    .then((data) =>\n      //   setMapGrid({ gridID: data.gridID, gridX: data.gridX, gridY: data.gridY })\n      {\n        console.log(data);\n      }\n    );\n  //put it in state\n}\n\nfunction error() {\n  let errorMSG = \"unable to retrieve your location.\";\n  console.log(errorMSG);\n  return errorMSG;\n}\n\nconst getPreviousWeather = () => {\n  //   if (!weatherState) {\n  //     getWeather();\n  //     //   https://api.openweathermap.org/data/2.5/onecall/timemachine?lat={lat}&lon={lon}&dt={time}&appid={API key}\n  //   }\n};\n\n// Parsers for weather calls\n// these will be on the server as well, and then they get called to the frontend?\n\nconst todaysWeather = () => {\n  //   if (!weatherState) {\n  //     getWeather();\n  //   }\n  //   return (\n  //     <p>pip</p>\n  //     //   temp\n  //     //   chance of percip\n  //     //   hourly data dawn to dusk\n  //   );\n};\n\nconst upcomingWeather = () => {\n  //   if (!weatherState) {\n  //     getWeather();\n  //   }\n  //   return (\n  //     //   temp\n  //     //   chance of percip\n  //     <p>pip</p>\n  //   );\n};\n\nconst previousWeather = () => {\n  //   if (!weatherState) {\n  //     getPreviousWeather();\n  //   }\n  //   return (\n  //     //   Date\n  //     //   percip\n  //     //   temp\n  //     <p>pip</p>\n  //   );\n};\n","/Users/ao/Desktop/code/forage_calendar/src/shared/apiKey.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":8,"column":28,"nodeType":"126","messageId":"127","endLine":8,"endColumn":36},{"ruleId":"124","severity":1,"message":"128","line":21,"column":8,"nodeType":"126","messageId":"127","endLine":21,"endColumn":20},{"ruleId":"124","severity":1,"message":"125","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"129","line":4,"column":10,"nodeType":"126","messageId":"127","endLine":4,"endColumn":20},{"ruleId":"124","severity":1,"message":"130","line":1,"column":10,"nodeType":"126","messageId":"127","endLine":1,"endColumn":16},{"ruleId":"131","severity":1,"message":"132","line":56,"column":70,"nodeType":"133","messageId":"134","endLine":56,"endColumn":71,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":107,"column":9,"nodeType":"138","endLine":107,"endColumn":52},{"ruleId":"136","severity":1,"message":"137","line":22,"column":7,"nodeType":"138","endLine":22,"endColumn":32},{"ruleId":"124","severity":1,"message":"125","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"139","line":3,"column":10,"nodeType":"126","messageId":"127","endLine":3,"endColumn":20},{"ruleId":"140","severity":1,"message":"141","line":74,"column":11,"nodeType":"138","endLine":83,"endColumn":12},{"ruleId":"140","severity":1,"message":"141","line":92,"column":11,"nodeType":"138","endLine":99,"endColumn":12},{"ruleId":"140","severity":1,"message":"142","line":106,"column":11,"nodeType":"138","endLine":112,"endColumn":13},{"ruleId":"140","severity":1,"message":"143","line":117,"column":11,"nodeType":"138","endLine":124,"endColumn":13},{"ruleId":"140","severity":1,"message":"144","line":130,"column":11,"nodeType":"138","endLine":139,"endColumn":13},{"ruleId":"124","severity":1,"message":"145","line":156,"column":7,"nodeType":"126","messageId":"127","endLine":156,"endColumn":24},{"ruleId":"124","severity":1,"message":"125","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":18},{"ruleId":"124","severity":1,"message":"146","line":3,"column":10,"nodeType":"126","messageId":"127","endLine":3,"endColumn":16},{"ruleId":"124","severity":1,"message":"147","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":13},{"ruleId":"124","severity":1,"message":"148","line":69,"column":7,"nodeType":"126","messageId":"127","endLine":69,"endColumn":25},{"ruleId":"124","severity":1,"message":"149","line":79,"column":7,"nodeType":"126","messageId":"127","endLine":79,"endColumn":20},{"ruleId":"124","severity":1,"message":"150","line":91,"column":7,"nodeType":"126","messageId":"127","endLine":91,"endColumn":22},{"ruleId":"124","severity":1,"message":"151","line":102,"column":7,"nodeType":"126","messageId":"127","endLine":102,"endColumn":22},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ForageLogger' is defined but never used.","'LoginModal' is defined but never used.","'marker' is defined but never used.","no-useless-escape","Unnecessary escape character: \\,.","Literal","unnecessaryEscape",["154","155"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'GetWeather' is defined but never used.","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component file must be in PascalCase or SCREAMING_SNAKE_CASE","'ForagingLocations' is defined but never used.","'apiKey' is defined but never used.","'React' is defined but never used.","'getPreviousWeather' is assigned a value but never used.","'todaysWeather' is assigned a value but never used.","'upcomingWeather' is assigned a value but never used.","'previousWeather' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"156","fix":"157","desc":"158"},{"messageId":"159","fix":"160","desc":"161"},"removeEscape",{"range":"162","text":"163"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"164","text":"165"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[1958,1959],"",[1958,1958],"\\"]