[{"/Users/ao/Desktop/code/forage_calendar/src/index.js":"1","/Users/ao/Desktop/code/forage_calendar/src/App.js":"2","/Users/ao/Desktop/code/forage_calendar/src/reportWebVitals.js":"3","/Users/ao/Desktop/code/forage_calendar/src/components/Logbook.jsx":"4","/Users/ao/Desktop/code/forage_calendar/src/components/Calendar.jsx":"5","/Users/ao/Desktop/code/forage_calendar/src/components/Fieldguide.jsx":"6","/Users/ao/Desktop/code/forage_calendar/src/components/Maps.jsx":"7","/Users/ao/Desktop/code/forage_calendar/src/components/Header.jsx":"8","/Users/ao/Desktop/code/forage_calendar/src/components/Reources.jsx":"9","/Users/ao/Desktop/code/forage_calendar/src/components/Lost.jsx":"10","/Users/ao/Desktop/code/forage_calendar/src/components/Contact.jsx":"11","/Users/ao/Desktop/code/forage_calendar/src/components/Footer.jsx":"12","/Users/ao/Desktop/code/forage_calendar/src/shared/mushroomIndex.js":"13","/Users/ao/Desktop/code/forage_calendar/src/components/FieldguideEntry.jsx":"14","/Users/ao/Desktop/code/forage_calendar/src/components/Safepractices.jsx":"15","/Users/ao/Desktop/code/forage_calendar/src/components/Backend.jsx":"16","/Users/ao/Desktop/code/forage_calendar/src/components/PublicLands.jsx":"17","/Users/ao/Desktop/code/forage_calendar/src/shared/safePractices_content.js":"18","/Users/ao/Desktop/code/forage_calendar/src/shared/public_lands.js":"19","/Users/ao/Desktop/code/forage_calendar/src/components/ForageLogger.jsx":"20","/Users/ao/Desktop/code/forage_calendar/src/shared/weatherAPI.js":"21","/Users/ao/Desktop/code/forage_calendar/src/shared/apiKey.js":"22"},{"size":500,"mtime":1609906552000,"results":"23","hashOfConfig":"24"},{"size":2345,"mtime":1610686794000,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1609906552000,"results":"26","hashOfConfig":"24"},{"size":522,"mtime":1610686421000,"results":"27","hashOfConfig":"24"},{"size":141,"mtime":1609908550000,"results":"28","hashOfConfig":"24"},{"size":925,"mtime":1610687404000,"results":"29","hashOfConfig":"24"},{"size":8276,"mtime":1610687448000,"results":"30","hashOfConfig":"24"},{"size":563,"mtime":1610686421000,"results":"31","hashOfConfig":"24"},{"size":143,"mtime":1609907559000,"results":"32","hashOfConfig":"24"},{"size":448,"mtime":1609962854000,"results":"33","hashOfConfig":"24"},{"size":2105,"mtime":1610686421000,"results":"34","hashOfConfig":"24"},{"size":933,"mtime":1610686421000,"results":"35","hashOfConfig":"24"},{"size":3349,"mtime":1610686421000,"results":"36","hashOfConfig":"24"},{"size":1962,"mtime":1610686421000,"results":"37","hashOfConfig":"24"},{"size":511,"mtime":1610686421000,"results":"38","hashOfConfig":"24"},{"size":135,"mtime":1610686421000,"results":"39","hashOfConfig":"24"},{"size":688,"mtime":1610686421000,"results":"40","hashOfConfig":"24"},{"size":1779,"mtime":1610686421000,"results":"41","hashOfConfig":"24"},{"size":3866,"mtime":1610686421000,"results":"42","hashOfConfig":"24"},{"size":5210,"mtime":1610686421000,"results":"43","hashOfConfig":"24"},{"size":3199,"mtime":1610686421000,"results":"44","hashOfConfig":"24"},{"size":225,"mtime":1610686421000,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"b9gkab",{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/ao/Desktop/code/forage_calendar/src/index.js",[],["97","98"],"/Users/ao/Desktop/code/forage_calendar/src/App.js",["99","100"],"import \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport React, { Component, useState } from \"react\";\n\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Calendar from \"./components/Calendar\";\nimport Logbook from \"./components/Logbook\";\nimport Fieldguide from \"./components/Fieldguide\";\nimport Resources from \"./components/Reources\";\nimport Lost from \"./components/Lost\";\nimport Contact from \"./components/Contact\";\nimport FieldguideEntry from \"./components/FieldguideEntry\";\nimport Safepractices from \"./components/Safepractices\";\nimport PublicLands from \"./components/PublicLands\";\nimport ForageLogger from \"./components/ForageLogger\";\n\nimport { mushrooms } from \"./shared/mushroomIndex\";\nimport Backend from \"./components/Backend\";\n\n//bring the mushrooms into state at this level.\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { mushrooms: mushrooms };\n  }\n\n  render() {\n    const FieldguidePage = ({ match }) => {\n      return (\n        <FieldguideEntry\n          specimen={\n            this.state.mushrooms.filter(\n              (mushroom) =>\n                mushroom.binomial.toLowerCase().replace(/\\s/g, \"-\") ===\n                match.params.binomial\n            )[0]\n          }\n        />\n      );\n    };\n\n    return (\n      <Router>\n        <Header />\n        <Switch>\n          <Route path=\"/calendar\" component={Calendar} />\n          <Route exact path=\"/fieldguide/\" component={Fieldguide} />\n          <Route path=\"/fieldguide/:binomial\" component={FieldguidePage} />\n          <Route path=\"/safepractices\" component={Safepractices} />\n          <Route path=\"/logbook\" component={Logbook} />\n          {/* <Route path=\"/lo\">  ForageLogger?*/}\n          <Route path=\"/publiclands\" component={PublicLands} />\n          <Route path=\"/resources\" component={Resources} />\n          <Route path=\"/contact\" component={Contact} />\n          <Route path=\"/lost-in-the-Fieldguide\" component={Lost} />\n          <Route path=\"/backend\" component={Backend} />{\" \"}\n          {/*should perhaps set state to get rid of header and footer*/}\n          <Redirect to=\"/lost-in-the-Fieldguide\" />\n        </Switch>\n\n        <Footer className=\"footer\" />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","/Users/ao/Desktop/code/forage_calendar/src/reportWebVitals.js",[],"/Users/ao/Desktop/code/forage_calendar/src/components/Logbook.jsx",["101","102"],"import React from \"react\";\n\nexport default function Logbook(){\n    return(\n        <div>\n            <p>Logbook</p>\n        </div>\n    );\n}","/Users/ao/Desktop/code/forage_calendar/src/components/Calendar.jsx",[],"/Users/ao/Desktop/code/forage_calendar/src/components/Fieldguide.jsx",[],"/Users/ao/Desktop/code/forage_calendar/src/components/Maps.jsx",["103","104"],"/Users/ao/Desktop/code/forage_calendar/src/components/Header.jsx",[],"/Users/ao/Desktop/code/forage_calendar/src/components/Reources.jsx",[],"/Users/ao/Desktop/code/forage_calendar/src/components/Lost.jsx",[],"/Users/ao/Desktop/code/forage_calendar/src/components/Contact.jsx",[],"/Users/ao/Desktop/code/forage_calendar/src/components/Footer.jsx",[],"/Users/ao/Desktop/code/forage_calendar/src/shared/mushroomIndex.js",[],"/Users/ao/Desktop/code/forage_calendar/src/components/FieldguideEntry.jsx",["105"],"import React from \"react\";\n// import { mushrooms } from \"../shared/mushroomIndex\";\n\n// \"I got props from the link, and that populates me as?\n\nfunction PhotoDisplay({ photo, photos }) {\n  const toggleThumb = () => {\n    console.log(\"i be big now\");\n  };\n  const imgs = [...photos, photo]; //use this to map thumbnails.\n  const thumbs = imgs.map((image) => {\n    const url = image.split(\"/\");\n\n    // a differnt option, better bc no unnecessary array\n    // const lastItem = thePath.substring(thePath.lastIndexOf('/') + 1)\n    // https://flaviocopes.com/how-to-get-last-item-path-javascript/\n\n    const imgName = url[url.length - 2]; //retrieves the directory name for the specimen, which is the speciment name\n    console.log(imgName);\n    // slice the name to get evrything from the end until the slash\n    return (\n      <a onClick={toggleThumb}>\n        <img src={image} alt={imgName} />\n      </a>\n    );\n  });\n\n  //circles growing up larger\n  // name over scrim on image?\n  //links again.\n\n  return <div id=\"thumbs\">{thumbs}</div>;\n}\n\nexport default function FieldguideEntry({ specimen }) {\n  return (\n    <>\n      <p>breadcrumbs fieldguide//{specimen.binomial}</p>\n      <br />\n      <h2>\n        <i>{specimen.binomial}</i>\n      </h2>\n      <h3>{`Common Names: ${specimen.names.join(\", \")}`}</h3>\n\n      {/* <img src={specimen.photo} alt={`image of ${specimen.binomial}`} /> */}\n      <PhotoDisplay photo={specimen.photo} photos={specimen.photos} />\n      <h3>Charactersitics</h3>\n      <p>{specimen.description.characteristics}</p>\n      <p>{specimen.description.habitat}</p>\n      {/* conditional for danger flag \n              \n              */}\n      <h3>Look Alikes</h3>\n      {/* <PhotoDisplay photos={specimen.lookAlikes}/> */}\n      <h3>Edibility: {specimen.edibility}</h3>\n      <p>{specimen.cooking.notes}</p>\n      <h4>Recipes</h4>\n      <ul>{/* map the recipe links? */}</ul>\n    </>\n  );\n}\n","/Users/ao/Desktop/code/forage_calendar/src/components/Safepractices.jsx",[],"/Users/ao/Desktop/code/forage_calendar/src/components/Backend.jsx",[],"/Users/ao/Desktop/code/forage_calendar/src/components/PublicLands.jsx",["106"],"import React, { useState } from \"react\";\nimport { publicLands } from \"../shared/public_lands\";\nimport {} from \"react-leaflet\";\nimport {\n  RenderMap,\n  RenderLocations,\n  RenderPublicLandsinfo,\n  RenderListofLocations,\n} from \"./Maps\";\n\nexport default function PublicLands() {\n  const ri = { location: [41.7129, -71.4921], zoom: 9 }; // long, lat, zoom level\n  //\n\n  return (\n    <>\n      <div>\n        <RenderMap containerID=\"public-lands\" initialLocation={ri}>\n          <RenderLocations locations={publicLands}>\n            <RenderPublicLandsinfo />\n          </RenderLocations>\n        </RenderMap>\n        <RenderListofLocations locations={publicLands} />\n      </div>\n    </>\n  );\n}\n","/Users/ao/Desktop/code/forage_calendar/src/shared/safePractices_content.js",[],"/Users/ao/Desktop/code/forage_calendar/src/shared/public_lands.js",[],"/Users/ao/Desktop/code/forage_calendar/src/components/ForageLogger.jsx",["107","108","109","110","111","112","113"],"import React, { Component } from \"react\";\nimport { Control, LocalForm } from \"react-redux-form\";\nimport { GetWeather } from \"../shared/weatherAPI\";\n\nimport { publicLands } from \"../shared/public_lands\";\nimport { mushrooms } from \"../shared/mushroomIndex\";\n// pull public lands & specimens from redux stores\n\nconst RenderChoices = ({ choices }) => {\n  const options = choices.map((choice) => {\n    return (\n      <option\n        key={choice.key}\n        value={`${choice.name !== undefined ? choice.name : choice.binomial}`}\n        style={{ backgroundImage: `url(${choice.photo})` }}\n        // style=\"background-image:url(female.png);\"\n      >\n        {choice.name !== undefined ? choice.name : choice.binomial}\n        {/* some sorta conditinal for a photo choice? */}\n      </option>\n    );\n  });\n  return options;\n};\n\nexport default class ForageLogger extends Component {\n  constructor(props) {\n    super(props);\n    this.getDate = this.getDate.bind(this);\n  }\n  // to prep forsaving?\n  handleSubmit(values) {\n    console.log(\"Current state is: \" + JSON.stringify(values));\n    alert(\"Current state is: \" + JSON.stringify(values));\n  }\n\n  getDate = () => {\n    let [month, day, year] = new Date().toLocaleDateString(\"en-US\").split(\"/\");\n\n    return [month, day, year]; // `${month} ${day} ${year}`\n  };\n\n  render() {\n    // function getImgData() {\n    //   const files = chooseFile.files[0];\n    //   if (files) {\n    //     const fileReader = new FileReader();\n    //     fileReader.readAsDataURL(files);\n    //     fileReader.addEventListener(\"load\", function () {\n    //       imgPreview.style.display = \"block\";\n    //       imgPreview.innerHTML = '<img src=\"' + this.result + '\" />';\n    //     });\n    //   }\n    // }\n\n    // // onchange of form call function above//\n    // const chooseFile = document.getElementById(\"logphotos\");\n    // const imgPreview = document.getElementById(\"img-preview\");\n\n    // chooseFile.addEventListener(\"change\", function () {\n    //   getImgData();\n    // });\n\n    let [month, day, year] = this.getDate();\n    // getWeather();\n    return (\n      <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n        <h3>{`${month} // ${day} // ${year}`}</h3>\n        {/* {weather} */}\n        {/* {map point} */}\n        <div className=\"form-group\">\n          <label htmlFor=\"location\">Location</label>\n          {/* //some sorta formating */}\n          <Control.select\n            model=\".location\"\n            id=\"location\"\n            name=\"location\"\n            placeholder=\"Location\"\n            className=\"form-control\"\n            // drop down if create new item, pop up text conditional add location\n            //https://stackoverflow.com/questions/21468436/add-input-box-when-selecting-a-specific-option-into-select-drop-down\n            //https://www.javascripttutorial.net/javascript-dom/javascript-add-remove-options/\n          >\n            <RenderChoices choices={publicLands} />\n          </Control.select>\n        </div>\n\n        {/* alternatively there is a radio checkbox and scrolling overflow div */}\n        <div className=\"form-group\">\n          <label htmlFor=\"forage-find\">Forage Find</label>\n          {/* //some sorta formating */}\n          <Control.select\n            model=\".forage-find\"\n            id=\"forage-find\"\n            name=\"forage-find\"\n            placeholder=\"forage-find\"\n            className=\"form-control\"\n            // drop down if create new item, pop up text conditional add location\n          >\n            <RenderChoices choices={mushrooms} />\n          </Control.select>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"log-title\">Log Title</label>\n          {/* //some sorta formating */}\n          <Control.text\n            model=\".log-title\"\n            id=\"log-title\"\n            name=\"log-title\"\n            placeholder=\"Log Title\"\n            className=\"form-control\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"log-notes\">Log Notes</label>\n          {/* //some sorta formating */}\n          <Control.textarea\n            rows=\"13\"\n            model=\".log-notes\"\n            id=\"log-notes\"\n            name=\"log-notes\"\n            placeholder=\"Log Notes\"\n            className=\"form-control\"\n          />\n        </div>\n        <div>\n          <div id=\"img-preview\"></div>\n\n          <label htmlFor=\"log-photos\">Photos</label>\n          <Control.file\n            multiple\n            // button\n            accept=\"image/png, image/jpeg\"\n            model=\".log-photos\"\n            id=\"log-photos\"\n            name=\"log-photos\"\n            className=\"form-control\"\n            capture=\"environment\"\n          />\n          {/* some sorta conditional to show appended photos \n          \n          https://codepen.io/mobifreaks/pen/LIbca\n          https://w3collective.com/preview-selected-img-file-input-js/\n\n          */}\n        </div>\n\n        <div className=\"form-group\">\n          <button type=\"submit\">Save Log</button>\n        </div>\n      </LocalForm>\n    );\n  }\n}\n\nclass ForagingLocations extends Component {\n  render() {\n    return (\n      <LocalForm onSubmit={(values) => this.handleSubmit(values)}></LocalForm>\n    );\n  }\n}\n","/Users/ao/Desktop/code/forage_calendar/src/shared/weatherAPI.js",["114","115","116","117","118","119","120"],"// change this\nimport { useState } from \"react\";\nimport { apiKey } from \"./apiKey.js\";\nimport React from \"react\";\n\n// how to cache weather?\n\n// make as few calls as possinle to get all the info, this should happen from the server and then get passed forward to the client\n\n// how do I differentiate between user location and the various public lands\n// long term look at weather patterns of RI regions... see if there is an overall architecture to it.\n\n// for geolocation -- more thorough version here https://www.tutorialrepublic.com/html-tutorial/html5-geolocation.php\n\n//  // Define callback function for failed attempt\n//  function errorCallback(error) {\n//     if(error.code == 1) {\n//         result.innerHTML = \"You've decided not to share your position, but it's OK. We won't ask you again.\";\n//     } else if(error.code == 2) {\n//         result.innerHTML = \"The network is down or the positioning service can't be reached.\";\n//     } else if(error.code == 3) {\n//         result.innerHTML = \"The attempt timed out before it could get the location data.\";\n//     } else {\n//         result.innerHTML = \"Geolocation failed due to unknown error.\";\n//     }\n// }\n\n//set redux state that the weather has been called for the day\n//   weatherState = true; //Flag we haz weather\n//   weather = setState({ somefrickingWeather }); //load the weather into state\n\n//POTENTIALLY jsut calls the NOAA free service.\n\n//   loop through places and fetch\n\n// const [noaaMapGrid, setMapGrid] = useState({\n//     gridID: \"\",\n//     gridX: \"\",\n//     gridY: \"\",\n//   });\n\n//  this is personcal location fetc\nexport const GetWeather = () => {\n  navigator.geolocation.getCurrentPosition(getCoords, error);\n};\n\nfunction getCoords(position) {\n  const lat = position.coords.latitude;\n  const long = position.coords.longitude;\n  // setState with the position?\n\n  fetch(`https://api.weather.gov/points/${lat},${long}`)\n    .then((response) => response.json())\n    .then((data) =>\n      //   setMapGrid({ gridID: data.gridID, gridX: data.gridX, gridY: data.gridY })\n      {\n        console.log(data);\n      }\n    );\n  //put it in state\n}\n\nfunction error() {\n  let errorMSG = \"unable to retrieve your location.\";\n  console.log(errorMSG);\n  return errorMSG;\n}\n\nconst getPreviousWeather = () => {\n  //   if (!weatherState) {\n  //     getWeather();\n  //     //   https://api.openweathermap.org/data/2.5/onecall/timemachine?lat={lat}&lon={lon}&dt={time}&appid={API key}\n  //   }\n};\n\n// Parsers for weather calls\n// these will be on the server as well, and then they get called to the frontend?\n\nconst todaysWeather = () => {\n  //   if (!weatherState) {\n  //     getWeather();\n  //   }\n  //   return (\n  //     <p>pip</p>\n  //     //   temp\n  //     //   chance of percip\n  //     //   hourly data dawn to dusk\n  //   );\n};\n\nconst upcomingWeather = () => {\n  //   if (!weatherState) {\n  //     getWeather();\n  //   }\n  //   return (\n  //     //   temp\n  //     //   chance of percip\n  //     <p>pip</p>\n  //   );\n};\n\nconst previousWeather = () => {\n  //   if (!weatherState) {\n  //     getPreviousWeather();\n  //   }\n  //   return (\n  //     //   Date\n  //     //   percip\n  //     //   temp\n  //     <p>pip</p>\n  //   );\n};\n","/Users/ao/Desktop/code/forage_calendar/src/shared/apiKey.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":8,"column":28,"nodeType":"127","messageId":"128","endLine":8,"endColumn":36},{"ruleId":"125","severity":1,"message":"129","line":21,"column":8,"nodeType":"127","messageId":"128","endLine":21,"endColumn":20},{"ruleId":"125","severity":1,"message":"126","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":25},{"ruleId":"125","severity":1,"message":"130","line":4,"column":10,"nodeType":"127","messageId":"128","endLine":4,"endColumn":20},{"ruleId":"125","severity":1,"message":"131","line":1,"column":10,"nodeType":"127","messageId":"128","endLine":1,"endColumn":16},{"ruleId":"132","severity":1,"message":"133","line":107,"column":9,"nodeType":"134","endLine":107,"endColumn":52},{"ruleId":"132","severity":1,"message":"133","line":22,"column":7,"nodeType":"134","endLine":22,"endColumn":32},{"ruleId":"125","severity":1,"message":"126","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":25},{"ruleId":"125","severity":1,"message":"135","line":3,"column":10,"nodeType":"127","messageId":"128","endLine":3,"endColumn":20},{"ruleId":"136","severity":1,"message":"137","line":74,"column":11,"nodeType":"134","endLine":83,"endColumn":12},{"ruleId":"136","severity":1,"message":"137","line":92,"column":11,"nodeType":"134","endLine":99,"endColumn":12},{"ruleId":"136","severity":1,"message":"138","line":106,"column":11,"nodeType":"134","endLine":112,"endColumn":13},{"ruleId":"136","severity":1,"message":"139","line":117,"column":11,"nodeType":"134","endLine":124,"endColumn":13},{"ruleId":"136","severity":1,"message":"140","line":130,"column":11,"nodeType":"134","endLine":139,"endColumn":13},{"ruleId":"125","severity":1,"message":"141","line":156,"column":7,"nodeType":"127","messageId":"128","endLine":156,"endColumn":24},{"ruleId":"125","severity":1,"message":"126","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":18},{"ruleId":"125","severity":1,"message":"142","line":3,"column":10,"nodeType":"127","messageId":"128","endLine":3,"endColumn":16},{"ruleId":"125","severity":1,"message":"143","line":4,"column":8,"nodeType":"127","messageId":"128","endLine":4,"endColumn":13},{"ruleId":"125","severity":1,"message":"144","line":69,"column":7,"nodeType":"127","messageId":"128","endLine":69,"endColumn":25},{"ruleId":"125","severity":1,"message":"145","line":79,"column":7,"nodeType":"127","messageId":"128","endLine":79,"endColumn":20},{"ruleId":"125","severity":1,"message":"146","line":91,"column":7,"nodeType":"127","messageId":"128","endLine":91,"endColumn":22},{"ruleId":"125","severity":1,"message":"147","line":102,"column":7,"nodeType":"127","messageId":"128","endLine":102,"endColumn":22},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ForageLogger' is defined but never used.","'LoginModal' is defined but never used.","'marker' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'GetWeather' is defined but never used.","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component file must be in PascalCase or SCREAMING_SNAKE_CASE","'ForagingLocations' is defined but never used.","'apiKey' is defined but never used.","'React' is defined but never used.","'getPreviousWeather' is assigned a value but never used.","'todaysWeather' is assigned a value but never used.","'upcomingWeather' is assigned a value but never used.","'previousWeather' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]